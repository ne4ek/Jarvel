-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE SCHEMA IF NOT EXISTS jarvel_schema;

CREATE TABLE IF NOT EXISTS public.user
(
    user_id bigint NOT NULL,
    username text NOT NULL,
    first_name text NOT NULL,
    last_name text NOT NULL,
    email text NOT NULL,
    arbitrary_data jsonb,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public.company
(
    company_id smallint DEFAULT nextval('company_id_seq'::regclass),
    name text NOT NULL,
    company_code text NOT NULL,
    description text,
    owner_id bigint,
    CONSTRAINT company_id PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS public.user_company
(
    user_id bigint,
    company_id smallint
);

CREATE TABLE IF NOT EXISTS public.message
(
    message_id bigint NOT NULL,
    user_id bigint NOT NULL,
    text text NOT NULL,
    date timestamp with time zone NOT NULL,
    replied_message_id bigint NOT NULL,
    chat_id bigint,
    PRIMARY KEY (message_id)
);

CREATE TABLE IF NOT EXISTS public.group_chat
(
    group_chat_id bigint NOT NULL,
    name text NOT NULL,
    company_id smallint NOT NULL,
    PRIMARY KEY (group_chat_id)
);

CREATE TABLE IF NOT EXISTS public.user_chat
(
    user_chat_id bigint NOT NULL,
    PRIMARY KEY (user_chat_id)
);

CREATE TABLE IF NOT EXISTS public.ctrls
(
    chat_id bigint NOT NULL,
    run_date timestamp with time zone NOT NULL,
    ctrl_usernames text NOT NULL,
    reply_message_id bigint NOT NULL,
    fyi_usernames text NOT NULL
);

CREATE TABLE IF NOT EXISTS public.task
(
    task_id bigint NOT NULL,
    author_id bigint NOT NULL,
    executor_id bigint NOT NULL,
    description text NOT NULL,
    task_summary text NOT NULL,
    tag text,
    deadline_datetime timestamp with time zone NOT NULL,
    status text NOT NULL,
    company_id smallint NOT NULL,
    PRIMARY KEY (task_id)
);

CREATE TABLE IF NOT EXISTS public.meeting
(
    meeting_id bigint NOT NULL,
    author_id bigint NOT NULL,
    moderator_id bigint NOT NULL,
    topic text NOT NULL,
    link text NOT NULL,
    known_participants_ids bigint[],
    unknown_participants_data jsonb,
    meeting_datetime timestamp with time zone NOT NULL,
    remind_datetime timestamp with time zone NOT NULL,
    company_id smallint NOT NULL,
    duration smallint,
    invitation_type text NOT NULL,
    status text,
    PRIMARY KEY (meeting_id)
);

CREATE TABLE IF NOT EXISTS public.mail
(
    mail_id bigint NOT NULL,
    author_id bigint NOT NULL,
    known_recipients_ids bigint[] NOT NULL,
    unknown_recipients_data jsonb[],
    topic text NOT NULL,
    body text NOT NULL,
    contact_type text,
    send_delay smallint,
    send_at timestamp with time zone,
    attachment bytea[],
    company_id smallint NOT NULL,
    PRIMARY KEY (mail_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.companies
(
    company_id serial NOT NULL,
    code text COLLATE pg_catalog."default",
    name text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    owner_id bigint,
    users_id bigint[],
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT companies_pkey PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.group_chats
(
    chat_id bigint,
    name text COLLATE pg_catalog."default",
    company_code text COLLATE pg_catalog."default",
    owner_id bigint,
    admins_id bigint[],
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS jarvel_schema.mailing
(
    mailing_id bigint NOT NULL,
    author_id bigint,
    recipient_ids bigint[],
    topic text COLLATE pg_catalog."default",
    body text COLLATE pg_catalog."default",
    contact_type text COLLATE pg_catalog."default",
    attachment text[] COLLATE pg_catalog."default",
    send_delay timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    send_at timestamp with time zone,
    CONSTRAINT mailing_pkey PRIMARY KEY (mailing_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.meetings
(
    meeting_id serial NOT NULL,
    moderator_id bigint,
    participants_id bigint[],
    author_id bigint,
    topic text COLLATE pg_catalog."default",
    link text COLLATE pg_catalog."default",
    company_code text COLLATE pg_catalog."default",
    invitation_type text COLLATE pg_catalog."default",
    duration text COLLATE pg_catalog."default",
    meeting_time timestamp with time zone,
    remind_time timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT meetings_pkey PRIMARY KEY (meeting_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.messages
(
    message_id serial NOT NULL,
    chat_message_id bigint,
    author_id bigint,
    company_code text COLLATE pg_catalog."default",
    text text COLLATE pg_catalog."default",
    date timestamp with time zone,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT messages_pkey PRIMARY KEY (message_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.scheduler_jobs
(
    job_id serial NOT NULL,
    type text COLLATE pg_catalog."default",
    trigger text COLLATE pg_catalog."default",
    run_date timestamp with time zone,
    sender_username text COLLATE pg_catalog."default",
    chat_id bigint,
    users_mentioned_usernames text COLLATE pg_catalog."default",
    reply_message_id bigint,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT scheduler_jobs_pkey PRIMARY KEY (job_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.tasks
(
    task_id serial NOT NULL,
    author_id bigint,
    executor_id bigint,
    task text COLLATE pg_catalog."default",
    deadline timestamp with time zone,
    task_summary text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default",
    tag text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tasks_pkey PRIMARY KEY (task_id)
);

CREATE TABLE IF NOT EXISTS jarvel_schema.user_chats
(
    chat_id bigint,
    role text COLLATE pg_catalog."default",
    company_code text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS jarvel_schema.users
(
    user_id bigint,
    username text COLLATE pg_catalog."default",
    name text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    arbitrary_data jsonb
);
END;